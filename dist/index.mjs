class s{constructor(){if(globalThis.__ficusjs__&&globalThis.__ficusjs__.eventBus)return globalThis.__ficusjs__.eventBus;this.events={},globalThis.__ficusjs__=globalThis.__ficusjs__||{},globalThis.__ficusjs__.eventBus=globalThis.__ficusjs__.eventBus||this}subscribe(s,e){const t=this;t.events[s]||(t.events[s]=[]);return t.events[s].push(e),()=>{t.events[s]=t.events[s].filter((s=>s!==e))}}publish(s,e={}){return this.events[s]?this.events[s].map((s=>s(e))):[]}}function createEventBus(){return new s}function getEventBus(){return createEventBus()}function withEventBus(s,e){return{...e,created(){this.setEventBus(s),e.created&&e.created.call(this)},mounted(){this._subscribeToEventBus(),e.mounted&&e.mounted.call(this)},updated(){this._subscribeToEventBus(),e.updated&&e.updated.call(this)},removed(){this._unsubscribeFromEventBus(),e.removed&&e.removed.call(this)},setEventBus(s){const e=this;e._eventBus=s,e._eventSubscriptions={},e.eventBus={subscribe:(s,t)=>(e._eventSubscriptions[s]={unsubscribe:e._eventBus.subscribe(s,t),callback:t},function(){const{unsubscribe:t}=e._eventSubscriptions[s];t&&t(),e._eventSubscriptions[s].unsubscribe=null}),publish(s,t={}){e._eventBus.publish(s,t)}}},_subscribeToEventBus(){for(const s in this._eventSubscriptions){const{unsubscribe:e,callback:t}=this._eventSubscriptions[s];e||(this._eventSubscriptions[s].unsubscribe=this._eventBus.subscribe(s,t))}},_unsubscribeFromEventBus(){for(const s in this._eventSubscriptions){const{unsubscribe:e}=this._eventSubscriptions[s];e&&e(),this._eventSubscriptions[s].unsubscribe=null}}}}export{createEventBus,getEventBus,withEventBus};
