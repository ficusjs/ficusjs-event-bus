{"version":3,"file":"index.mjs","sources":["../src/event-bus.mjs","../src/with-event-bus.mjs"],"sourcesContent":["class EventBus {\n  constructor () {\n    if (globalThis.__ficusjs__ && globalThis.__ficusjs__.eventBus) {\n      return globalThis.__ficusjs__.eventBus\n    }\n    this.subscribers = {}\n    globalThis.__ficusjs__ = globalThis.__ficusjs__ || {}\n    globalThis.__ficusjs__.eventBus = globalThis.__ficusjs__.eventBus || this\n  }\n\n  /**\n   * Return a list of subscribers for a topic. If no topic is passed, all subscribers are returned\n   * @method\n   * @param topic\n   * @returns {Map|object} A Map of subscribers for a topic or object of all subscribers for all topics\n   */\n  getSubscribers (topic) {\n    return topic ? this.subscribers[topic] : this.subscribers\n  }\n\n  /**\n   * Subscribe to a topic\n   *\n   * @method\n   * @param {string} topic\n   * @param {function} callback\n   * @param {object} options\n   * @returns {number} A count of callbacks for this topic\n   */\n  subscribe (topic, callback, options = {}) {\n    const self = this\n    const opts = { callCount: 0, fireOnce: false, ...options }\n\n    // If there's not already an topic with this name set in our collection\n    // go ahead and create a new one and set it with an empty array, so we don't\n    // have to type check it later down-the-line\n    if (!self.subscribers[topic]) {\n      self.subscribers[topic] = new Map()\n    }\n\n    // create an unsubscribe function\n    const unsubscribe = () => {\n      const newItems = new Map()\n      self.subscribers[topic].forEach((v, k) => k !== callback && newItems.set(k, v))\n      self.subscribers[topic] = newItems\n    }\n\n    // add the callback to the map\n    self.subscribers[topic].set(callback, opts)\n\n    return unsubscribe\n  }\n\n  /**\n   * Publish a message to a topic\n   *\n   * @method\n   * @param {string} topic\n   * @param {object} data\n   * @returns {Map} The subscribers notified by this topic\n   */\n  publish (topic, data) {\n    const self = this\n\n    // There's no topic to publish to, so bail out\n    if (!self.subscribers[topic]) {\n      return []\n    }\n\n    // Get each subscription and call its callback with the passed data\n    const published = new Map()\n    self.subscribers[topic].forEach((opts, callback) => {\n      if (opts.fireOnce && opts.callCount === 1) return\n      callback(data)\n      ++opts.callCount\n      published.set(callback, opts)\n    })\n    return published\n  }\n}\n\n/**\n * Function to create an EventBus instance\n * @returns {EventBus}\n */\nexport function createEventBus () {\n  return new EventBus()\n}\n\n/**\n * Function to get the running EventBus instance\n * @returns {EventBus}\n */\nexport function getEventBus () {\n  return createEventBus()\n}\n","export function withEventBus (eventBus, options) {\n  return {\n    ...options,\n    created () {\n      this.setEventBus(eventBus)\n      if (options.created) options.created.call(this)\n    },\n    mounted () {\n      this._subscribeToEventBus()\n      if (options.mounted) options.mounted.call(this)\n    },\n    updated () {\n      this._subscribeToEventBus()\n      if (options.updated) options.updated.call(this)\n    },\n    removed () {\n      this._unsubscribeFromEventBus()\n      if (options.removed) options.removed.call(this)\n    },\n    setEventBus (eventBus) {\n      const self = this\n      self._eventBus = eventBus\n      self._eventSubscriptions = {}\n      self.eventBus = {\n        subscribe (event, callback, options) {\n          self._eventSubscriptions[event] = { unsubscribe: self._eventBus.subscribe(event, callback, options), callback, options }\n          return function () {\n            const { unsubscribe } = self._eventSubscriptions[event]\n            unsubscribe && unsubscribe()\n            self._eventSubscriptions[event].unsubscribe = null\n          }\n        },\n        publish (event, data = {}) {\n          self._eventBus.publish(event, data)\n        },\n        getSubscribers (topic) {\n          return self._eventBus.getSubscribers(topic)\n        }\n      }\n    },\n    _subscribeToEventBus () {\n      for (const k in this._eventSubscriptions) {\n        const { unsubscribe, callback, options } = this._eventSubscriptions[k]\n        if (!unsubscribe) {\n          this._eventSubscriptions[k].unsubscribe = this._eventBus.subscribe(k, callback, options)\n        }\n      }\n    },\n    _unsubscribeFromEventBus () {\n      for (const k in this._eventSubscriptions) {\n        const { unsubscribe } = this._eventSubscriptions[k]\n        unsubscribe && unsubscribe()\n        this._eventSubscriptions[k].unsubscribe = null\n      }\n    }\n  }\n}\n"],"names":["EventBus","constructor","globalThis","__ficusjs__","eventBus","this","subscribers","getSubscribers","topic","subscribe","callback","options","self","opts","callCount","fireOnce","Map","set","newItems","forEach","v","k","publish","data","published","createEventBus","getEventBus","withEventBus","created","setEventBus","call","mounted","_subscribeToEventBus","updated","removed","_unsubscribeFromEventBus","_eventBus","_eventSubscriptions","event","unsubscribe"],"mappings":"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"}