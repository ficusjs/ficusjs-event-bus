{"version":3,"file":"with-event-bus.mjs","sources":["../src/with-event-bus.mjs"],"sourcesContent":["export function withEventBus (eventBus, options) {\n  return {\n    ...options,\n    created () {\n      this.setEventBus(eventBus)\n      if (options.created) options.created.call(this)\n    },\n    mounted () {\n      this._subscribeToEventBus()\n      if (options.mounted) options.mounted.call(this)\n    },\n    updated () {\n      this._subscribeToEventBus()\n      if (options.updated) options.updated.call(this)\n    },\n    removed () {\n      this._unsubscribeFromEventBus()\n      if (options.removed) options.removed.call(this)\n    },\n    setEventBus (eventBus) {\n      const self = this\n      self._eventBus = eventBus\n      self._eventSubscriptions = {}\n      self.eventBus = {\n        subscribe (event, callback, options) {\n          self._eventSubscriptions[event] = { unsubscribe: self._eventBus.subscribe(event, callback, options), callback, options }\n          return function () {\n            const { unsubscribe } = self._eventSubscriptions[event]\n            unsubscribe && unsubscribe()\n            self._eventSubscriptions[event].unsubscribe = null\n          }\n        },\n        publish (event, data = {}) {\n          self._eventBus.publish(event, data)\n        },\n        getSubscribers (topic) {\n          return self._eventBus.getSubscribers(topic)\n        }\n      }\n    },\n    _subscribeToEventBus () {\n      for (const k in this._eventSubscriptions) {\n        const { unsubscribe, callback, options } = this._eventSubscriptions[k]\n        if (!unsubscribe) {\n          this._eventSubscriptions[k].unsubscribe = this._eventBus.subscribe(k, callback, options)\n        }\n      }\n    },\n    _unsubscribeFromEventBus () {\n      for (const k in this._eventSubscriptions) {\n        const { unsubscribe } = this._eventSubscriptions[k]\n        unsubscribe && unsubscribe()\n        this._eventSubscriptions[k].unsubscribe = null\n      }\n    }\n  }\n}\n"],"names":["withEventBus","eventBus","options","created","this","setEventBus","call","mounted","_subscribeToEventBus","updated","removed","_unsubscribeFromEventBus","self","_eventBus","_eventSubscriptions","subscribe","event","callback","unsubscribe","publish","data","getSubscribers","topic","k"],"mappings":"AAAO,SAASA,aAAcC,EAAUC,GACtC,MAAO,IACFA,EACHC,UACEC,KAAKC,YAAYJ,GACbC,EAAQC,SAASD,EAAQC,QAAQG,KAAKF,KAC3C,EACDG,UACEH,KAAKI,uBACDN,EAAQK,SAASL,EAAQK,QAAQD,KAAKF,KAC3C,EACDK,UACEL,KAAKI,uBACDN,EAAQO,SAASP,EAAQO,QAAQH,KAAKF,KAC3C,EACDM,UACEN,KAAKO,2BACDT,EAAQQ,SAASR,EAAQQ,QAAQJ,KAAKF,KAC3C,EACDC,YAAaJ,GACX,MAAMW,EAAOR,KACbQ,EAAKC,UAAYZ,EACjBW,EAAKE,oBAAsB,CAAE,EAC7BF,EAAKX,SAAW,CACdc,UAAU,CAACC,EAAOC,EAAUf,KAC1BU,EAAKE,oBAAoBE,GAAS,CAAEE,YAAaN,EAAKC,UAAUE,UAAUC,EAAOC,EAAUf,GAAUe,WAAUf,WACxG,WACL,MAAMgB,YAAEA,GAAgBN,EAAKE,oBAAoBE,GACjDE,GAAeA,IACfN,EAAKE,oBAAoBE,GAAOE,YAAc,IAC/C,GAEHC,QAASH,EAAOI,EAAO,IACrBR,EAAKC,UAAUM,QAAQH,EAAOI,EAC/B,EACDC,eAAgBC,GACPV,EAAKC,UAAUQ,eAAeC,GAG1C,EACDd,uBACE,IAAK,MAAMe,KAAKnB,KAAKU,oBAAqB,CACxC,MAAMI,YAAEA,EAAWD,SAAEA,EAAQf,QAAEA,GAAYE,KAAKU,oBAAoBS,GAC/DL,IACHd,KAAKU,oBAAoBS,GAAGL,YAAcd,KAAKS,UAAUE,UAAUQ,EAAGN,EAAUf,GAEnF,CACF,EACDS,2BACE,IAAK,MAAMY,KAAKnB,KAAKU,oBAAqB,CACxC,MAAMI,YAAEA,GAAgBd,KAAKU,oBAAoBS,GACjDL,GAAeA,IACfd,KAAKU,oBAAoBS,GAAGL,YAAc,IAC3C,CACF,EAEL"}